- include_role:
    name: nginxinc.nginx
  vars:
    nginx_http_template_enable: false

- name: Install letsencrypt
  apt:
    pkg: letsencrypt
    state: present

- name: Creates directory /etc/letsencrypt/configs
  file:
    path: /etc/letsencrypt/configs
    state: directory

- name: Creates directory /var/www/letsencrypt
  file:
    path: /var/www/letsencrypt
    state: directory
    group: www-data

- name: Authorize HTTP port (ipv4)
  iptables:
    ip_version: ipv4
    chain: INPUT
    protocol: tcp
    destination_port: 80
    jump: ACCEPT

- name: Authorize HTTP port (ipv6)
  iptables:
    ip_version: ipv6
    chain: INPUT
    protocol: tcp
    destination_port: 80
    jump: ACCEPT

- name: Authorize HTTPS port (ipv4)
  iptables:
    ip_version: ipv4
    chain: INPUT
    protocol: tcp
    destination_port: 443
    jump: ACCEPT

- name: Authorize HTTPS port (ipv6)
  iptables:
    ip_version: ipv6
    chain: INPUT
    protocol: tcp
    destination_port: 443
    jump: ACCEPT

- name: Creates directory /etc/iptables
  file:
    path:  /etc/iptables
    state: directory

- name: Save the rules ipv4
  shell: iptables-save > /etc/iptables/rules.v4

- name: Save the rules ipv6
  shell: ip6tables-save > /etc/iptables/rules.v6

- name: Generate letsencrypt configuration
  template:
    src: letsencrypt/conf.ini.j2
    dest: /etc/letsencrypt/configs/{{ hostvars[inventory_hostname].default_domain }}.ini
  when: nginx_default_server
  notify: Nginx HTTP

- name: Cert bot
  command: certbot -n --agree-tos --config /etc/letsencrypt/configs/{{ hostvars[inventory_hostname].default_domain }}.ini certonly
  args:
    creates: /etc/letsencrypt/live/{{ hostvars[inventory_hostname].default_domain }}/cert.pem
  when: nginx_default_server

- name: Nginx security conf
  template:
    src: includes/security.conf.j2
    dest: /etc/nginx/conf.d/security.conf
  notify: Restart nginx

- name: Nginx disable gzip in default config file
  lineinfile:
    dest: "{{ itemÂ }}"
    regexp: "^[ \t#]*gzip (on|off);"
    state: absent
  with_items:
    - /etc/nginx/nginx.conf
    - /etc/nginx/conf.d/default.conf
    - /etc/nginx/sites-enabled/default # OLD nginx path
  ignore_errors: True
  notify: Restart nginx

- name: Nginx gzip conf
  template:
    src: includes/gzip.conf.j2
    dest: /etc/nginx/conf.d/gzip.conf
  notify: Restart nginx

- name: Nginx install RFC7919 ffdhe2048 DH groups
  copy:
    src: ffdhe4096.pem
    dest: /etc/ssl/ffdhe4096.pem

- name: Nginx create includes folder
  file:
    path: /etc/nginx/includes
    state: directory

- name: Nginx Add letsencrypt include
  template:
    src: includes/letsencrypt.conf.j2
    dest: /etc/nginx/includes/letsencrypt.conf
  notify: Restart nginx

- name: Nginx Add SSL include
  template:
    src: includes/ssl.conf.j2
    dest: /etc/nginx/includes/ssl.conf
  notify: Restart nginx

- name: Nginx HTTPS
  template:
    src: sites/default.conf.j2
    dest: /etc/nginx/conf.d/default.conf
  notify: Restart nginx
  when: nginx_default_server

- name: DB {{ username }} - Remove default conf (default_server)
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/nginx/conf.d/default.conf
    - /etc/nginx/sites-enabled/default
  ignore_errors: True
  when: not nginx_default_server